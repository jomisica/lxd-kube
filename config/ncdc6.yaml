config:
  description: "This example uses basically all of the previous examples.
    However, it deploys Wordpress and MariaDB. The idea is to reinforce
    how we can use the storage of an LXD host, normally SSD for the
    databases. In this case, the template forces the database to always
    run in the ncdc6-kworker1 instance where an LXD host directory is
    mounted. Wordpress is forced to use the ncdc6-kworker2 instance where
    an LXD host directory is mounted for the wordpress files. However, in
    a real case it would not be necessary for Wordpress to be tied to an
    instance, as long as it has another type of storage, for example NFS.
    Since what requires a lot of storage iops would be the database, it
    makes sense to run on certain hosts that have appropriate storage for
    the databases.

    In this example, wordpress and mysql are deployed for demonstration purposes,
    however these apps must be installed in another way, for example with helm so
    that we can manage/control the versions. The basic idea of this script is to
    actually create a cluster and make it functional so that we can access it through
    the API with kubeconfig. We must configure the network, Storage, Monitoring, so
    that applications can be installed and configured through kubeconfig, with helm or
    git actions or another way that controls application versions. However, it is
    possible to install applications.

    If we want to access the Wordpress page from another host on the network,
    we can use the Kubernetes proxy like this:
    kubectl port-forward service/wordpress 8000:80 --address='0.0.0.0'

    This way we can connect to the LXD host from another computer on the
    network on port 8000 for example. http://host lxd ip:8000

    If we want to access the Grafana page from another host on the network,
    we can use the Kubernetes proxy like this:
    kubectl port-forward service/grafana 32000:3000 --address='0.0.0.0' -n monitoring

    This way we can connect to the LXD host from another computer on the
    network on port 32000 for example. http://host lxd ip:32000
    "
  lxd:
    projectName: ncdc6
    defaultClusterMemberTarget: terra # default cluster member: terra, marte
  kubernetes:
    clusterName: ncdc6
    version: 1.22.2
    podSubnet: 10.6.0.0/16
    controlPlaneEndpointDomain: ncdc.pt
    kubeConfigEndpointUseIP: true # Values true/false - Use IP to access the master plane in kubeconfig
  instances:
  - instance:
    lxd:
      name: ncdc6-kmaster
      image: ubuntu:22.04
      profile: ncdc6-kmaster
    kubernetes:
      type: master
  - instance:
    lxd:
      name: ncdc6-kworker1
      image: ubuntu:22.04
      profile: ncdc6-kworker1
    kubernetes:
      type: worker
  - instance:
    lxd:
      name: ncdc6-kworker2
      image: ubuntu:22.04
      profile: ncdc6-kworker2
    kubernetes:
      type: worker
  - instance:
    lxd:
      name: ncdc6-kworker3
      image: ubuntu:22.04
      profile: ncdc6-kworker3
    kubernetes:
      type: worker